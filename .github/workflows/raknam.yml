name: Build win-x64
on:
  push:
    branches:
      - main
    
jobs:
  build:
    runs-on: windows-latest
    if: github.repository == 'raknam/ErsatzTV'
    
    steps:
      - name: Get the sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Clean
        run: dotnet clean --configuration Release && dotnet nuget locals all --clear

      - name: Install dependencies
        run: dotnet restore -r win-x64

      - uses: suisei-cn/actions-download-file@v1.3.0
        id: downloadffmpeg
        name: Download ffmpeg
        with:
          url: "https://github.com/ErsatzTV/ErsatzTV-ffmpeg/releases/download/6.1-working-cuvid/ffmpeg-6.1-working-cuvid.7z"
          target: ffmpeg/

      - name: Build
        shell: bash
        run: |
          # Define some variables for things we need
          release_name="ErsatzTV-test-raknam-win-x64"
          echo "RELEASE_NAME=test-raknam" >> $GITHUB_ENV

          # Build everything
          sed -i '/Scanner/d' ErsatzTV/ErsatzTV.csproj
          dotnet publish ErsatzTV.Scanner/ErsatzTV.Scanner.csproj --framework net8.0 --runtime win-x64 -c Release -o test-raknam -p:InformationalVersion="test-raknam-win-x64" -p:EnableCompressionInSingleFile=true -p:DebugType=Embedded -p:PublishSingleFile=true --self-contained true
          dotnet publish ErsatzTV/ErsatzTV.csproj --framework net8.0 --runtime win-x64 -c Release -o test-raknam -p:InformationalVersion="test-raknam-win-x64" -p:EnableCompressionInSingleFile=true -p:DebugType=Embedded -p:PublishSingleFile=true --self-contained true

          # Build Windows launcher
          # cargo build --manifest-path=ErsatzTV-Windows/Cargo.toml --release --all-features
          # ls -l ErsatzTV-Windows/target/release
          # mv ErsatzTV-Windows/target/release/ersatztv_windows.exe "$release_name/ErsatzTV-Windows.exe"