@page "/media/sources/emby"
@using ErsatzTV.Core.Interfaces.Emby
@using ErsatzTV.Application.Emby
@using ErsatzTV.Core.Emby
@implements IDisposable
@inject IEmbySecretStore _embySecretStore
@inject ChannelWriter<IScannerBackgroundServiceRequest> _scannerWorkerChannel

<RemoteMediaSources
    TViewModel="EmbyMediaSourceViewModel"
    TSecrets="EmbySecrets"
    TMediaSource="EmbyMediaSource"
    Name="Emby"
    GetAllMediaSourcesCommand="@(new GetAllEmbyMediaSources())"
    DisconnectCommand="@(new DisconnectEmby())"
    RefreshLibrariesCommand="@(mediaSourceId => RefreshLibraries(mediaSourceId))"
    SecretStore="@_embySecretStore"/>

@code {
    private readonly CancellationTokenSource _cts = new();

    public void Dispose()
    {
        _cts.Cancel();
        _cts.Dispose();
    }

    private async Task RefreshLibraries(int mediaSourceId) =>
        await _scannerWorkerChannel.WriteAsync(new SynchronizeEmbyLibraries(mediaSourceId), _cts.Token);

}