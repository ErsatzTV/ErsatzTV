@using Microsoft.Extensions.Caching.Memory
@inject IMediator _mediator
@inject IMemoryCache _memoryCache
@inject ISnackbar _snackbar
@inject ILogger<SaveAsSmartCollectionDialog> _logger

<MudDialog>
    <DialogContent>
        <EditForm Model="@_dummyModel" OnSubmit="@(_ => Submit())">
            <MudContainer Class="mb-6">
                <MudHighlighter Class="mud-primary-text"
                                Style="background-color: transparent; font-weight: bold"
                                Text="Enter a name for the smart collection"/>
            </MudContainer>
            <MudTextFieldString Label="New Collection Name"
                                @bind-Text="@_newCollectionName"
                                Class="mb-6 mx-4">
            </MudTextFieldString>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" ButtonType="ButtonType.Reset">Cancel</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit">
            Save As Smart Collection
        </MudButton>
    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string DetailText { get; set; }

    [Parameter]
    public string DetailHighlight { get; set; }

    private string _newCollectionName;

    private record DummyModel;

    private readonly DummyModel _dummyModel = new();

    private bool CanSubmit() => !string.IsNullOrWhiteSpace(_newCollectionName);

    private void Submit()
    {
        if (!CanSubmit())
        {
            return;
        }

        MudDialog.Close(DialogResult.Ok(_newCollectionName));
    }

    private void Cancel(MouseEventArgs e)
    {
    // this is gross, but [enter] seems to sometimes trigger cancel instead of submit
        if (e.Detail == 0)
        {
            Submit();
        }
        else
        {
            MudDialog.Cancel();
        }
    }

}